// The MIT License
//
// Copyright (c) 2016 Google, Inc.
// Copyright (c) 2020 Petherson Moreno
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

@use '../keyframes/keyframes' as keyframes;
@import '../vars';

.mg-fab {
  --primary: #{$primary};
  --on-primary: #{$on-primary};
  --secondary: #{$secondary};
  --on-secondary: #{$on-secondary};
  --font-family: #{$font-family};
  --font-size: #{$font-size};
  --line-height: #{line-height};
  --font-weight: #{font-weight};
  --letter-spacing: #{letter-spacing};
  --text-decoration: #{text-decoration};
  --text-transform: #{text-transform};
  @include keyframes.vars;
  @include keyframes.keyframes;
  position: relative;
  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);
  display: inline-flex;
  position: relative;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
  width: 56px;
  height: 56px;
  padding: 0;
  border: none;
  fill: currentColor;
  text-decoration: none;
  cursor: pointer;
  user-select: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  overflow: visible;
  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), opacity 15ms linear 30ms, transform 270ms 0ms cubic-bezier(0, 0, 0.2, 1);
  background-color: $secondary;
  background-color: var(--secondary, $secondary);
  color: $on-secondary;
  color: var(--on-secondary, $on-secondary);
  border-radius: 50%;

  &, > .ripple{
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }

  &::-moz-focus-inner {
    padding: 0;
    border: 0;
  }

  //Children

  &::before {
    position: absolute;
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    border: 1px solid transparent;
    border-radius: inherit;
    content: "";
  }
  > .ripple {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    overflow: hidden;
    border-radius: 50%;
    &::before,
    &::after {
      position: absolute;
      border-radius: 50%;
      opacity: 0;
      pointer-events: none;
      content: "";
    }
    &::before {
      transition: opacity 15ms linear, background-color 15ms linear;
      z-index: 1;
    }
    &::before,
    &::after {
      top: calc(50% - 100%);
      left: calc(50% - 100%);
      width: 200%;
      height: 200%;
      background-color: #fff;
      background-color: var(--on-secondary, #fff);
    }
    &::after {
      transition: opacity 150ms linear;
    }
  }

  > svg {
    width: 100%;
  }
  > .icon {
    width: 24px;
    height: 24px;
    font-size: 24px;
    transition: transform 180ms 90ms cubic-bezier(0, 0, 0.2, 1);
    fill: currentColor;
    will-change: transform;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }

  > .label {
    justify-content: flex-start;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow-x: hidden;
    overflow-y: visible;
  }

  //Variants events

  &:hover,
  &:focus {
    box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);
  }
  &:active {
    box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);
    > .ripple::after {
      transition-duration: 75ms;
      opacity: 0.24;
    }
  }
  &:active,
  &:focus {
    outline: none;
  }
  &:hover {
    cursor: pointer;
    > .ripple::before {
      opacity: 0.08;
    }
  }

  //Variants

  &.mini {
    width: 40px;
    height: 40px;
  }
  &.extended {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-family: $font-family;
    font-family: var(--font-family, $font-family);
    font-size: $font-size;
    font-size: var(--font-size, $font-size);
    line-height: $line-height;
    line-height: var(--line-height, line-height);
    font-weight: $font-weight;
    font-weight: var(--font-weight, $font-weight);
    letter-spacing: $letter-spacing;
    letter-spacing: var(--letter-spacing, $letter-spacing);
    text-decoration: $text-decoration;
    text-decoration: var(--text-decoration, $text-decoration);
    text-transform: $text-transform;
    text-transform: var(--text-transform, $text-transform);
    border-radius: 24px;
    padding: 0 20px;
    width: auto;
    max-width: 100%;
    height: 48px;
    line-height: normal;
    > .ripple {
      border-radius: 24px;
    }
    > .icon {
      margin-left: -8px;
      margin-right: 12px;
    }
    > .icon[dir=rtl] {
      margin-left: 12px;
      margin-right: -8px;
    }
    > .label + .icon {
      margin-left: 12px;
      margin-right: -8px;
    }
    > .label + .icon[dir=rtl] {
      margin-left: -8px;
      margin-right: 12px;
    }
  }
  &.touch {
    margin-top: 4px;
    margin-bottom: 4px;
    margin-right: 4px;
    margin-left: 4px;
    > .touch {
      position: absolute;
      top: 50%;
      right: 0;
      height: 48px;
      left: 50%;
      width: 48px;
      transform: translate(-50%, -50%);
    }
  }
  &.exited {
    transform: scale(0);
    opacity: 0;
    transition: opacity 15ms linear 150ms, transform 180ms 0ms cubic-bezier(0.4, 0, 1, 1);
    > .icon {
      transform: scale(0);
      transition: transform 135ms 0ms cubic-bezier(0.4, 0, 1, 1);
    }
  }

  
  &.fg-activation > .ripple::after {
    animation: ripple-fg-radius-in 225ms forwards, ripple-fg-opacity-in 75ms forwards;
  }
  &.fg-deactivation > .ripple::after {
    animation: ripple-fg-opacity-out 150ms;
    transform: translate(var(--ripple-fg-translate-end, 0)) scale(var(--ripple-fg-scale, 1));
  }
}

